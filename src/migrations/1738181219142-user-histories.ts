import { MigrationInterface, QueryRunner } from 'typeorm';

export class UserHistories1738181219142 implements MigrationInterface {
  name = 'UserHistories1738181219142';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "user_histories" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, 
                                      "title" character varying NOT NULL, 
                                      "description" character varying NOT NULL, 
                                      "projectId" integer NOT NULL, 
                                      "createdAt" TIMESTAMP NOT NULL DEFAULT now(), 
                                      "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), 
                                      "deletedAt" TIMESTAMP, CONSTRAINT "PK_75bd7cc95b4e5d7e557e81adffb" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 1)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 1)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 1)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 2)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 2)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 2)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 3)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 3)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 3)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 4)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 4)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 4)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 5)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 5)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 5)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 6)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 6)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 6)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 7)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 7)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 7)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 8)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 8)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 8)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo autenticación', 'modulo de autenticación donde usuario iniciará sesión o se registrará', 9)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Modulo Administración', 'modulo donde el usuario modificará sus productos en venta', 9)`,
    );
    await queryRunner.query(
      `INSERT INTO "user_histories" (title, description, "projectId") VALUES ('Dashboard', 'módulo donde usuario podrá ver las estadísticas de sus ventas', 9)`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`DROP TABLE "user_histories"`);
  }
}
