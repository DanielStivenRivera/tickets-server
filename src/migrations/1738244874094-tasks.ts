import { MigrationInterface, QueryRunner } from 'typeorm';

export class Tasks1738244874094 implements MigrationInterface {
  name = 'Tasks1738244874094';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TYPE "public"."task_logs_eventtype_enum" AS ENUM('CHANGE_STATUS', 'COMMENT')`,
    );
    await queryRunner.query(
      `CREATE TABLE "task_logs" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "eventType" "public"."task_logs_eventtype_enum" NOT NULL, "comment" character varying, "statusChange" json, "taskId" integer NOT NULL, "createdAt" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_9754457a29b4ffbb772e8a3039c" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_363351d7c117f653087c1d7bf2" ON "task_logs" ("taskId") `,
    );
    await queryRunner.query(
      `CREATE TABLE "tasks" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "userHistoryId" integer NOT NULL, "title" character varying NOT NULL, "description" character varying NOT NULL, "status" character varying NOT NULL DEFAULT 'TODO', "createdAt" TIMESTAMP NOT NULL DEFAULT now(), "updatedAt" TIMESTAMP NOT NULL DEFAULT now(), "deletedAt" TIMESTAMP, CONSTRAINT "PK_8d12ff38fcc62aaba2cab748772" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `ALTER TABLE "task_logs" ADD CONSTRAINT "FK_363351d7c117f653087c1d7bf27" FOREIGN KEY ("taskId") REFERENCES "tasks"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "tasks" ADD CONSTRAINT "FK_f2a6f09ac2420dfd90f91418794" FOREIGN KEY ("userHistoryId") REFERENCES "user_histories"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "user_histories" ADD CONSTRAINT "FK_59f798aa8360541e3523f63dd6b" FOREIGN KEY ("projectId") REFERENCES "projects"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 1)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 1)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 1, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 1, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 2)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 2)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 2, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 2, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 3)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 3)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 3, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 3, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 4)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 4)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 4, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 4, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 5)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 5)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 5, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 5, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 6)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 6)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 6, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 6, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 7)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 7)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 7, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 7, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 8)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 8)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 8, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 8, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 9)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 9)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 9, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 9, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 10)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 10)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 10, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 10, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 10)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 10)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 10, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 10, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 11)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 11)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 12, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 12, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 13)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 13)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 13, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 13, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 1', 'descripción tarea 1', 14)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId") VALUES ('tarea 2', 'descripción tarea 2', 14)`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 3', 'descripción tarea 3', 14, 'FINISHED')`,
    );
    await queryRunner.query(
      `INSERT INTO "tasks" (title, description, "userHistoryId", status) VALUES ('tarea 4', 'descripción tarea 4', 14, 'FINISHED')`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `ALTER TABLE "user_histories" DROP CONSTRAINT "FK_59f798aa8360541e3523f63dd6b"`,
    );
    await queryRunner.query(
      `ALTER TABLE "tasks" DROP CONSTRAINT "FK_f2a6f09ac2420dfd90f91418794"`,
    );
    await queryRunner.query(
      `ALTER TABLE "task_logs" DROP CONSTRAINT "FK_363351d7c117f653087c1d7bf27"`,
    );
    await queryRunner.query(`DROP TABLE "tasks"`);
    await queryRunner.query(
      `DROP INDEX "public"."IDX_363351d7c117f653087c1d7bf2"`,
    );
    await queryRunner.query(`DROP TABLE "task_logs"`);
    await queryRunner.query(`DROP TYPE "public"."task_logs_eventtype_enum"`);
  }
}
